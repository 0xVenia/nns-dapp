#!/usr/bin/env bash
set -euo pipefail

# Downloads a released asset
download_asset() {
  local release_name asset destination
  release_name="$1"
  asset="$2"
  destination="$3"
  curl -sSLf "https://github.com/dfinity/nns-dapp/releases/download/${release_name}/${asset}" | sponge "$destination" || {
    echo "ERROR: Failed to download asset '${asset:-}' for release '${release_name}'."
    exit 1
  } >&2
}

# The path to the local copy of the wasm used in the test.
working_wasm() {
  local configuration_num
  lint_configuration_num "${configuration_num:-}" || exit 1
  echo "$WORKDIR/nns-dapp-${configuration_num}_test.wasm.gz"
}

# The path to the arguments used in the test
working_arguments() {
  local configuration_num
  configuration_num="${1:-}"
  lint_configuration_num "${configuration_num:-}" || exit 1
  echo "$WORKDIR/nns-dapp-args-${configuration_num}.did"
}

# Gets a local copy of a Wasm from a path or GitHub release
get_wasm() {
  local path_or_release destination
  path_or_release="${1:-}"
  destination="${2:-}"
  lint_wasm_path "$destination"

  if [[ "${path_or_release:-}" = *.wasm.gz ]]; then
    lint_wasm_path "${path_or_release:-}"
    cp "${path_or_release}" "$destination"
  else
    lint_release_name "${path_or_release:-}"
    download_asset "${path_or_release}" nns-dapp_test.wasm.gz "$destination"
  fi
  : Final sanity check
  lint_wasm "$destination"
}

# Gets a local copy of an arguments file from a local path or GitHub release
get_argfile() {
  local path_or_release destination
  path_or_release="${1:-}"
  destination="${2:-}"
  lint_argfile_path "$destination"

  if [[ "${path_or_release:-}" = *.did ]]; then
    lint_argfile_path "${path_or_release:-}"
    cp "${path_or_release}" "$destination"
  else
    lint_release_name "${path_or_release:-}"
    download_asset "${path_or_release}" nns-dapp-arg-local.did "$destination"
  fi
  : Final sanity check
  lint_argfile "$destination"
}

# This file is intended to be sourced, but if called directly, offer some help
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  if (($# == 0)) || [[ "${1:-}" == "--help" ]]; then
    cat <<-EOF
		A library of methods for getting assets.

		Usage:
		- Source this file from your code.
		- You can also call this file directly.  Pass the function name
		  you want to call and arguments.  This may be useful for
		  ad-hoc runs but is not intended for production use.

		A list of functions:
		EOF
    declare -F
    exit 0
  fi
  "${@}"
fi
